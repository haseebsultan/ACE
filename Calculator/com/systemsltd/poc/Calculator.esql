BROKER SCHEMA com.systemsltd.poc


CREATE COMPUTE MODULE Addition
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		DECLARE inputRef REFERENCE TO InputRoot.JSON.Data;
		SET OutputRoot.Properties = InputProperties;
		
		DECLARE num1 INTEGER CAST(inputRef.Num1 AS INTEGER);
		DECLARE num2 INTEGER CAST(inputRef.Num2 AS INTEGER);
		
		
		CREATE FIELD OutputRoot.JSON.Data.result;
		DECLARE ouRefResult REFERENCE TO  OutputRoot.JSON.Data.result;
		
		SET ouRefResult = num1 + num2;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE Subtraction
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE inputRef REFERENCE TO InputRoot.JSON.Data;
		SET OutputRoot.Properties = InputProperties;
		
		DECLARE num1 INTEGER CAST(inputRef.Num1 AS INTEGER);
		DECLARE num2 INTEGER CAST(inputRef.Num2 AS INTEGER);
		
		
		CREATE FIELD OutputRoot.JSON.Data.result;
		DECLARE ouRefResult REFERENCE TO  OutputRoot.JSON.Data.result;
		
		SET ouRefResult = num2 - num1;
		
		RETURN TRUE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
